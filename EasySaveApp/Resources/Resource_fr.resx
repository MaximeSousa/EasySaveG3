<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="An error occurred:" xml:space="preserve">
    <value>Une erreur s'est produite:</value>
  </data>
  <data name="Backup  executed successfully." xml:space="preserve">
    <value>Sauvegarde exécutée avec succès.</value>
  </data>
  <data name="Backup deleted successfully." xml:space="preserve">
    <value>Sauvegarde supprimée avec succès.</value>
  </data>
  <data name="Backup does not exist." xml:space="preserve">
    <value>La sauvegarde n'existe pas.</value>
  </data>
  <data name="Backup updated successfully." xml:space="preserve">
    <value>Sauvegarde mise à jour avec succès.</value>
  </data>
  <data name="Change Backup" xml:space="preserve">
    <value>Modifier un sauvegarde</value>
  </data>
  <data name="Change Language" xml:space="preserve">
    <value>Changer de Langue</value>
  </data>
  <data name="Choose An Option" xml:space="preserve">
    <value>Choisissez une option</value>
  </data>
  <data name="Choose the type of backup:" xml:space="preserve">
    <value>Choisissez le type de sauvegarde:</value>
  </data>
  <data name="Create Backup" xml:space="preserve">
    <value>Créer une sauvegarde</value>
  </data>
  <data name="Create Multiple" xml:space="preserve">
    <value>Créer plusieurs</value>
  </data>
  <data name="Create Multiple Backups:" xml:space="preserve">
    <value>Créez plusieurs sauvegardes :</value>
  </data>
  <data name="Create Single" xml:space="preserve">
    <value>Créer un seul</value>
  </data>
  <data name="Create Single Backup:" xml:space="preserve">
    <value>Créer une sauvegarde unique :</value>
  </data>
  <data name="Delete Backup" xml:space="preserve">
    <value>Supprimer la sauvegarde</value>
  </data>
  <data name="Differential" xml:space="preserve">
    <value>Différentielle</value>
  </data>
  <data name="Differential Backup Method" xml:space="preserve">
    <value>Méthode de sauvegarde</value>
  </data>
  <data name="Enter a name for the Backup (15 max)" xml:space="preserve">
    <value>Entrez un nom pour la sauvegarde (15 max)</value>
  </data>
  <data name="Enter the backup numbers to execute (e.g., '1', '1-3', '1;3'):" xml:space="preserve">
    <value>Saisissez les numéros de sauvegarde à exécuter (e.g., '1', '1-3', '1;3'):</value>
  </data>
  <data name="Enter the Directory source for the backup" xml:space="preserve">
    <value>Entrez la source du répertoire pour la sauvegarde</value>
  </data>
  <data name="Enter the Name of the backup that you want to delete:" xml:space="preserve">
    <value>Saisissez le nom de la sauvegarde que vous souhaitez supprimer:</value>
  </data>
  <data name="Enter the Name of the backup that you want to modify:" xml:space="preserve">
    <value>Saisissez le nom de la sauvegarde que vous souhaitez modifier:</value>
  </data>
  <data name="Enter the new name for the backup:" xml:space="preserve">
    <value>Saisissez le nouveau nom de la sauvegarde:</value>
  </data>
  <data name="Execute Backup" xml:space="preserve">
    <value>Exécuter la sauvegarde</value>
  </data>
  <data name="Full" xml:space="preserve">
    <value>Complète</value>
  </data>
  <data name="Full Backup Method" xml:space="preserve">
    <value>Méthode de sauvegarde complète</value>
  </data>
  <data name="Invalid choice" xml:space="preserve">
    <value>Choix invalide</value>
  </data>
  <data name="Invalid Option" xml:space="preserve">
    <value>Option invalide</value>
  </data>
  <data name="Language changed to" xml:space="preserve">
    <value>La langue a été modifiée en</value>
  </data>
  <data name="Leave" xml:space="preserve">
    <value>Quitter</value>
  </data>
  <data name="Main Menu Title" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="Name:" xml:space="preserve">
    <value>Nom:</value>
  </data>
  <data name="No backup numbers provided." xml:space="preserve">
    <value>Aucun numéro de secours fourni.</value>
  </data>
  <data name="No valid backup numbers provided." xml:space="preserve">
    <value>Aucun numéro de sauvegarde valide fourni.</value>
  </data>
  <data name="The backup was completed successfully!" xml:space="preserve">
    <value>La sauvegarde a été effectuée avec succès !</value>
  </data>
  <data name="The directory source doesn't exist" xml:space="preserve">
    <value>La source du répertoire n'existe pas</value>
  </data>
  <data name="This name is not valid" xml:space="preserve">
    <value>Ce nom n'est pas valide</value>
  </data>
</root>